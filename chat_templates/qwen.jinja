{# Qwen2.5-Omni ChatML template (LLM-style friendly) #}
{% set audio_count = namespace(value=0) %}
{% set image_count = namespace(value=0) %}
{% set video_count = namespace(value=0) %}

{%- macro render_block(content) -%}
  {%- if content is string -%}
    {{ content }}
  {%- elif content.get('type') == 'image' or 'image' in content or 'image_url' in content -%}
    {%- set image_count.value = image_count.value + 1 -%}
    {%- if add_vision_id %}Picture {{ image_count.value }}: {% endif -%}
    <|vision_bos|><|IMAGE|><|vision_eos|>
  {%- elif content.get('type') == 'audio' or 'audio' in content or 'audio_url' in content -%}
    {%- set audio_count.value = audio_count.value + 1 -%}
    {%- if add_audio_id %}Audio {{ audio_count.value }}: {% endif -%}
    <|audio_bos|><|AUDIO|><|audio_eos|>
  {%- elif content.get('type') == 'video' or 'video' in content -%}
    {%- set video_count.value = video_count.value + 1 -%}
    {%- if add_vision_id %}Video {{ video_count.value }}: {% endif -%}
    <|vision_bos|><|VIDEO|><|vision_eos|>
  {%- elif 'text' in content -%}
    {{ content['text'] }}
  {%- else -%}
    {{ content }}
  {%- endif -%}
{%- endmacro %}

{%- for message in messages -%}
  {%- if loop.first and message['role'] != 'system' -%}
<|im_start|>system
You are a helpful assistant.<|im_end|>
  {%- endif -%}

<|im_start|>{{ message['role'] }}
  {# message['content']가 문자열이면 그대로 출력 #}
  {%- if message['content'] is string -%}
{{ message['content'] }}<|im_end|>
  {%- else -%}
    {# 리스트/딕셔너리/혼합 케이스 처리: 리스트가 아니면 리스트로 감싸기 #}
    {%- set _blocks = (message['content'] 
                       if (message['content'] is iterable and (message['content'] is not string)) 
                       else [message['content']]) -%}
    {%- for content in _blocks -%}
      {{ render_block(content) }}
    {%- endfor -%}<|im_end|>
  {%- endif -%}
{%- endfor -%}
{%- if add_generation_prompt -%}
<|im_start|>assistant
{%- endif -%}
